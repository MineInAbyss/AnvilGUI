plugins {
    id 'java'
    id 'maven-publish'
    id 'idea'
    id "com.diffplug.spotless" version "6.25.0"
    id 'io.github.goooler.shadow' version '8.1.7'
}

subprojects {
    // use java 8 for all modules by default
    java {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

allprojects {
    apply plugin: 'java-library'
    group = 'net.wesjd'
    version = '1.10.1-SNAPSHOT'


    apply plugin: 'com.diffplug.spotless'
    spotless {
        java {
            target 'src/*/java*/**/*.java'
            palantirJavaFormat()
            removeUnusedImports()
            importOrder()
        }
    }

    repositories {
        gradlePluginPortal()
        mavenCentral()
        mavenLocal()
        maven {
            url = uri('https://repo.codemc.org/repository/nms/')
        }
        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
        }
        maven {
            url = uri('https://repo.papermc.io/repository/maven-public/')
        }
    }

    apply plugin: 'maven-publish'
    publishing {
        publications {
            "$project.name"(MavenPublication) {
                groupId project.group
                artifactId project.name
                version project.version
                from components.java
            }
        }
        repositories {
            maven {
                credentials(PasswordCredentials)
                name ="spaceio"
                url = uri('https://repo.spaceio.xyz/repository/maven-snapshots/')
            }
        }
    }

    tasks.withType(JavaCompile).tap {
        configureEach {
            options.encoding = 'UTF-8'
        }
    }
    // suppress java 8 obsolete warnings
    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << '-Xlint:-options'
    }

    // run spotlessJavaCheck before shadowJar task
    shadowJar.dependsOn spotlessJavaCheck
}

// parent uses java 21
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// Java versions
// api, abstraction   ^= java 8
// 1_7_R4 .. 1_16_R3  ^= java 8
// 1_17_R1            ^= java 16
// 1_18_R1 .. 1_20_R3 ^= java 17
// 1_20_R4, paper     ^= java 21
dependencies {
    implementation project(':api')
    implementation project(':abstraction')
    implementation project(':NMS:1_7_R4')
    implementation project(':NMS:1_8_R1')
    implementation project(':NMS:1_8_R2')
    implementation project(':NMS:1_8_R3')
    implementation project(':NMS:1_9_R1')
    implementation project(':NMS:1_9_R2')
    implementation project(':NMS:1_10_R1')
    implementation project(':NMS:1_11_R1')
    implementation project(':NMS:1_12_R1')
    implementation project(':NMS:1_13_R1')
    implementation project(':NMS:1_13_R2')
    implementation project(':NMS:1_14_R1')
    implementation project(':NMS:1_14_4_R1')
    implementation project(':NMS:1_15_R1')
    implementation project(':NMS:1_16_R1')
    implementation project(':NMS:1_16_R2')
    implementation project(':NMS:1_16_R3')
    implementation project(':NMS:1_17_R1')
    implementation project(':NMS:1_17_1_R1')
    implementation project(':NMS:1_18_R1')
    implementation project(':NMS:1_18_R2')
    implementation project(':NMS:1_19_R1')
    implementation project(':NMS:1_19_1_R1')
    implementation project(':NMS:1_19_R2')
    implementation project(':NMS:1_19_R3')
    implementation project(':NMS:1_20_R1')
    implementation project(':NMS:1_20_R2')
    implementation project(':NMS:1_20_R3')
    implementation project(':NMS:1_20_R4')
    implementation project(':NMS:1_21_R1')
    implementation project(':NMS:paper')
}

shadowJar {
    archiveClassifier.set(null)
    archiveBaseName.set('anvilgui')
}